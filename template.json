{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {
    "projectShort": {
      "type": "string",
      "maxLength": 8,
      "metadata": {
        "description": "A short identifier (up to 8 characters) for your project that will be added to your resource names"
      }
    },
    "sqlDbAdminLogin": {
      "type": "string",
      "defaultValue": "sqldemoadmin",
      "metadata": {
        "description": "The username for the database administrator login"
      }
    },
    "sqlDbAdminPassword": {
      "type": "securestring",
      "defaultValue": "!demo54321",
      "metadata": {
        "description": "The password for the database administrator login"
      }
    },
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow('d')]",
      "metadata": {
        "description": "The timestamp format that will be used for creating the tags in your RG - leave at default"
      }
    },
    "StorageAccountSasProperties": {
      "type": "object",
      "defaultValue": {
        "signedServices": "b",
        "signedPermission": "rw",
        "signedExpiry": "[dateTimeAdd(utcNow('u'), 'P3M')]",
        "signedResourceTypes": "o"
      }
    }
  },
  "variables": {
    "blobStorageAccountName": "[concat('stgblob', parameters('projectShort'), uniqueString(resourceGroup().id))]",
    "adlStorageAccountName": "[concat('stgadl', parameters('projectShort'), uniqueString(resourceGroup().id))]",
    "keyVaultName": "[concat('kv-', parameters('projectShort'), '-', uniqueString(resourceGroup().id))]",
    "sqlConnectionStringSecretName": "[concat('connstr-', variables('sqldb_servername'))]",
    "blobStorageSASsecretName": "[concat('sas-', variables('blobStorageAccountName'))]",
    "blobStorageAccessKeySecretName": "[concat('key-', variables('blobStorageAccountName'))]",
    "blobStorageConnectionStringSecretName": "[concat('constr-', variables('blobStorageAccountName'))]",
    "adlStorageSASsecretName": "[concat('sas-', variables('adlStorageAccountName'))]",
    "adlStorageAccessKeySecretName": "[concat('key-', variables('adlStorageAccountName'))]",
    "adlStorageConnectionStringSecretName": "[concat('constr-', variables('adlStorageAccountName'))]",
    "azureKeyVault_baseUrl": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]",
    "sqldb_servername": "[concat('sqlsrv-', parameters('projectShort'), '-', uniqueString(resourceGroup().id))]",
    "sqldb_dbname": "[concat('sqldb-', parameters('projectShort'), '-', uniqueString(resourceGroup().id))]",
    "dataFactoryName": "[concat('adf-', parameters('projectShort'), '-', uniqueString(resourceGroup().id))]",
    "factoryId": "[concat('Microsoft.DataFactory/factories/', 'adf-', parameters('projectShort'), '-', uniqueString(resourceGroup().id))]",
    "tags": {
      "createdOn": "[parameters('utcValue')]",
      "createdBy": "[concat('Automatic deployment for ', parameters('projectShort'))]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('blobStorageAccountName')]",
      "location": "westeurope",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "isHnsEnabled": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('blobStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('blobStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('blobStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('blobStorageAccountName'), '/default/sourcedata')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('blobStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('blobStorageAccountName'), '/default/sinkdata')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('blobStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('adlStorageAccountName')]",
      "location": "eastus",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('adlStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlStorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "changeFeed": {
          "enabled": false
        },
        "restorePolicy": {
          "enabled": false
        },
        "containerDeleteRetentionPolicy": {
          "enabled": false
        },
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        },
        "isVersioningEnabled": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('adlStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlStorageAccountName'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('adlStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlStorageAccountName'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('adlStorageAccountName'), '/default/extract')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('adlStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlStorageAccountName'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('adlStorageAccountName'), '/default/loading')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('adlStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlStorageAccountName'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('adlStorageAccountName'), '/default/movie-in')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('adlStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlStorageAccountName'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('adlStorageAccountName'), '/default/movie-out')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('adlStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlStorageAccountName'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('adlStorageAccountName'), '/default/transform')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('adlStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlStorageAccountName'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "apiVersion": "2019-06-01-preview",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": "[variables('tags')]",
      "name": "[variables('sqldb_servername')]",
      "properties": {
        "administratorLogin": "[parameters('sqlDbAdminLogin')]",
        "administratorLoginPassword": "[parameters('sqlDbAdminPassword')]",
        "version": "12.0"
      },

      "resources": [
        {
          "apiVersion": "2021-02-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqldb_servername'))]"
          ],
          "location": "[resourceGroup().location]",
          "tags": "[variables('tags')]",
          "name": "[variables('sqldb_dbname')]",
          "properties": {
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "34359738368",
            "zoneRedundant": false,
            "minCapacity": 0.5,
            "autoPauseDelay": 60,
            "readScale": "Disabled",
            "storageAccountType": "LRS"
          },
          "sku": {
            "name": "GP_S_Gen5",
            "tier": "GeneralPurpose",
            "family": "Gen5",
            "capacity": 4
          },
          "type": "databases"
        },
        {
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqldb_servername'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "type": "firewallrules"
        }
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "name": "[variables('keyVaultName')]",
      "location": "[resourceGroup().location]",
      "tags": "[variables('tags')]",
      "dependsOn": [
        "[concat('Microsoft.DataFactory/factories/', variables('dataFactoryName'))]"
      ],
      "properties": {
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": true,
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(concat('Microsoft.DataFactory/factories/', variables('dataFactoryName')), '2018-06-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [
                "get"
              ],
              "secrets": [
                "list",
                "get",
                "set"
              ]
            }
          }
        ],
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },
    {
      "apiVersion": "2018-02-14",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('blobStorageAccountName'))]"
      ],
      "name": "[concat(variables('keyVaultName'), '/', variables('blobStorageSASsecretName'))]",
      "properties": {
        "value": "[listAccountSas(variables('blobStorageAccountName'), '2018-07-01', parameters('StorageAccountSasProperties')).accountSasToken]"
      }
    },
    {
      "apiVersion": "2018-02-14",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('blobStorageAccountName'))]"
      ],
      "name": "[concat(variables('keyVaultName'), '/', variables('blobStorageAccessKeySecretName'))]",
      "properties": {
        "value": "[listKeys(variables('blobStorageAccountName'), '2018-07-01').keys[0].value]"
      }
    },
    {
      "apiVersion": "2018-02-14",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('blobStorageAccountName'))]"
      ],
      "name": "[concat(variables('keyVaultName'), '/', variables('blobStorageConnectionStringSecretName'))]",
      "properties": {
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('blobStorageAccountName'), ';AccountKey=', listKeys(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('blobStorageAccountName')), '2019-04-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
      }
    },
    {
      "apiVersion": "2018-02-14",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('adlStorageAccountName'))]"
      ],
      "name": "[concat(variables('keyVaultName'), '/', variables('adlStorageSASsecretName'))]",
      "properties": {
        "value": "[listAccountSas(variables('adlStorageAccountName'), '2018-07-01', parameters('StorageAccountSasProperties')).accountSasToken]"
      }
    },
    {
      "apiVersion": "2018-02-14",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('adlStorageAccountName'))]"
      ],
      "name": "[concat(variables('keyVaultName'), '/', variables('adlStorageAccessKeySecretName'))]",
      "properties": {
        "value": "[listKeys(variables('adlStorageAccountName'), '2018-07-01').keys[0].value]"
      }
    },
    {
      "apiVersion": "2018-02-14",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('adlStorageAccountName'))]"
      ],
      "name": "[concat(variables('keyVaultName'), '/', variables('adlStorageConnectionStringSecretName'))]",
      "properties": {
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('adlStorageAccountName'), ';AccountKey=', listKeys(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('blobStorageAccountName')), '2019-04-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
      }
    },
    {
      "apiVersion": "2018-02-14",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Sql/servers/', variables('sqldb_servername'))]"
      ],
      "name": "[concat(variables('keyVaultName'), '/', variables('sqlConnectionStringSecretName'))]",
      "properties": {
        "value": "[concat('Server=tcp:', variables('sqldb_servername'),'.database.windows.net,1433;Initial Catalog=', variables('sqldb_dbname'),';Persist Security Info=False;User ID=', parameters('sqlDbAdminLogin'),';Password=', parameters('sqlDbAdminPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
      }
    },
    { // create the azure data factory
      "name": "[variables('dataFactoryName')]",
      "type": "Microsoft.DataFactory/factories",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "properties": {},
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": "[variables('tags')]",
      "resources": [
        {
          "name": "[concat(variables('dataFactoryName'), '/KeyVaultService')]",
          "type": "Microsoft.DataFactory/factories/linkedServices",
          "apiVersion": "2018-06-01",
          "properties": {
            "annotations": [],
            "type": "AzureKeyVault",
            "typeProperties": {
              "baseUrl": "[variables('azureKeyVault_baseUrl')]"
            }
          },
          "dependsOn": [
            "[variables('dataFactoryName')]"
          ]
        },
        {
          "name": "[concat(variables('dataFactoryName'), '/blob-', parameters('projectShort'))]",
          "type": "Microsoft.DataFactory/factories/linkedservices",
          "apiVersion": "2018-06-01",
          "properties": {
            "annotations": [],
            "type": "AzureBlobStorage",
            "typeProperties": {
              "connectionString": {
                "type": "AzureKeyVaultSecret",
                "store": {
                  "referenceName": "KeyVaultService",
                  "type": "LinkedServiceReference"
                },
                "secretName": "[variables('blobStorageConnectionStringSecretName')]"
              }
            }
          },
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[concat(variables('factoryId'), '/linkedServices/KeyVaultService')]"
          ]
        },
        {
          "name": "[concat(variables('dataFactoryName'), '/adl-', parameters('projectShort'))]",
          "type": "Microsoft.DataFactory/factories/linkedservices",
          "apiVersion": "2018-06-01",
          "properties": {
            "annotations": [],
            "type": "AzureBlobFS",
            "typeProperties": {
              "url": "[concat('https://', variables('adlStorageAccountName'),'.dfs.core.windows.net/')]",
              "accountKey": {
                "type": "AzureKeyVaultSecret",
                "store": {
                  "referenceName": "KeyVaultService",
                  "type": "LinkedServiceReference"
                },
                "secretName": "[variables('adlStorageAccessKeySecretName')]"
              }
            }
          },
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[concat(variables('factoryId'), '/linkedServices/KeyVaultService')]"
          ]
        },
        {
          "name": "[concat(variables('dataFactoryName'), '/sqldb-', parameters('projectShort'))]",
          "type": "Microsoft.DataFactory/factories/linkedservices",
          "apiVersion": "2018-06-01",
          "properties": {
            "annotations": [],
            "type": "AzureSqlDatabase",
            "typeProperties": {
              "connectionString": {
                "type": "AzureKeyVaultSecret",
                "store": {
                  "referenceName": "KeyVaultService",
                  "type": "LinkedServiceReference"
                },
                "secretName": "[variables('sqlConnectionStringSecretName')]"
              }
            }
          },
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[concat(variables('factoryId'), '/linkedServices/KeyVaultService')]"
          ]
        }
      ]
    }
  ]
}